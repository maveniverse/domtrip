name: Deploy Website

on:
  push:
    branches: [ master, main ]
    paths:
      - 'website/**'
      - 'src/test/java/eu/maveniverse/domtrip/demos/**'
      - '.github/workflows/deploy-website.yml'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'website/**'
      - 'src/test/java/eu/maveniverse/domtrip/demos/**'
      - '.github/workflows/deploy-website.yml'

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for proper git info
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install dependencies
      working-directory: website
      run: npm ci
    
    - name: Extract code snippets
      working-directory: website
      run: npm run extract-snippets
    
    - name: Validate snippets
      working-directory: website
      run: npm run validate-snippets
    
    - name: Build website
      working-directory: website
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: website/target/build

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  test-build:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: ./build
    
    - name: Test build output
      run: |
        echo "✅ Website build completed successfully"
        echo "📁 Build artifacts:"
        find ./build -type f -name "*.html" | head -10
        echo "📊 Build size:"
        du -sh ./build
    
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Get build info
          const buildPath = './build';
          const htmlFiles = fs.readdirSync(buildPath, { recursive: true })
            .filter(file => file.endsWith('.html')).length;
          
          const comment = `## 🚀 Website Preview
          
          The website has been built successfully!
          
          📊 **Build Stats:**
          - HTML pages: ${htmlFiles}
          - Build completed: ✅
          
          The website will be deployed automatically when this PR is merged to main.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
