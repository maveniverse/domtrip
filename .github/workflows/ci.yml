name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'
    
    - name: Run tests and verify build
      run: ./mvnw verify
    
    - name: Test website build
      run: QUARKUS_ROQ_GENERATOR_BATCH=true ./mvnw -f website clean package quarkus:run -DskipTests
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
        retention-days: 7
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if tests passed
          const testsPassed = process.env.GITHUB_JOB_STATUS !== 'failure';
          const emoji = testsPassed ? '✅' : '❌';
          const status = testsPassed ? 'PASSED' : 'FAILED';
          
          // Try to get test count from surefire reports
          let testInfo = '';
          try {
            const coreTestDir = 'core/target/surefire-reports';
            if (fs.existsSync(coreTestDir)) {
              const testFiles = fs.readdirSync(coreTestDir)
                .filter(file => file.startsWith('TEST-') && file.endsWith('.xml'));
              testInfo = `\n📊 **Test Files:** ${testFiles.length} test suites found`;
            }
          } catch (e) {
            console.log('Could not read test results:', e.message);
          }
          
          const comment = `## ${emoji} CI Build ${status}
          
          **Build Status:** ${status}
          **Java Version:** 21
          **Maven Command:** \`./mvnw verify\`${testInfo}
          
          ${testsPassed ? 
            '🎉 All tests passed! The build is ready for merge.' : 
            '⚠️ Some tests failed. Please check the logs and fix any issues.'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
